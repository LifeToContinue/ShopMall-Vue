module.exports = {
  lintOnSave:false,  //http://39.98.123.211
  devServer: {
    proxy: {
        //代理是配置在本地的开发服务器webpack-dev-server身上的
        //webpack-dev-server是服务本地的，项目一开始就已经发了一个请求给本地
        //本地会把webpack打包好的dist文件夹当中的index.html返回给浏览器，浏览器加载渲染

        //只要是webpack所感的，都是本地服务器干的，这个代理也是一样
        //配了代理只能代理本地的请求，代理不了其它的

        //代理只能代理本地服务器的请求，所以，我们必须把浏览器直接往服务器发送的修改
        //axios封装的时候，公共路径不能写服务器地址，默认就发到本地，转到本地webpackdevserver才会有机会去处理这个请求

        //     /api 代表代理转发请求标志，只要路径是以/api开头的，就转发


        /* 
            1.先把请求改到本地
            2.添加统一转发标志，配置代理
            3.转发给目标服务器
            4.根据需求判断需要重写标志否?
        */

        "/api": {
            //帮忙给转发到的目标服务器
            target: "http://39.98.123.211",

            //什么时候写这行，要看最终请求的路径当中到底有没有/api
            //如果有的，不需要重写，如果没有就需要重写
            //如果没有/api，那么我们的公共基础路径里面也是要加的，只是一个转发标志
            // pathRewrite: { "^/api": "" }
        }
    }
}
}